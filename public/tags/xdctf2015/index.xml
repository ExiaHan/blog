<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>XDCTF2015 on ExiaHan&#39;s Blog</title>
    <link>https://blog.exiahan.com/tags/xdctf2015/</link>
    <description>Recent content in XDCTF2015 on ExiaHan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Oct 2015 23:12:46 +0800</lastBuildDate>
    
	<atom:link href="https://blog.exiahan.com/tags/xdctf2015/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XDCTF2015 WRITEUP(我才不会说我就做出来一题)</title>
      <link>https://blog.exiahan.com/posts/xdctf_writeup/</link>
      <pubDate>Fri, 02 Oct 2015 23:12:46 +0800</pubDate>
      
      <guid>https://blog.exiahan.com/posts/xdctf_writeup/</guid>
      <description>&lt;h2 id=&#34;0x1-给大黑阔们跪了&#34;&gt;0x1 给大黑阔们跪了&lt;/h2&gt;
&lt;p&gt;本来准备出去玩的，结果到家后发现要过两天才有人回来，就趁机做了把XDCTF的线上，结果被虐的北都找不到了，看着6星和Sigma一路突突突，只能膜了。。有思路的一共三题，结果最后只做出来1题。。。另外两题做到一大半怎么也进行不下去了。
总体来说虽然没做出来多少，但是感觉XDCTF水平是很高的了，题目也都很虐人（Pia!&amp;lt;(=ｏ ‵-′)ノ☆
这里写个备忘，毕竟是一次经历。&lt;/p&gt;
&lt;h2 id=&#34;0x2-没写出来但有思路的的&#34;&gt;0x2 没写出来但有思路的的&lt;/h2&gt;
&lt;h3 id=&#34;reverse-01&#34;&gt;Reverse 01&lt;/h3&gt;
&lt;p&gt;一个linux 的elf x64程序，还是挺有意思的，可惜没做出来，逆向功力不够，大概思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;入口函数是函数0x4008e1，里面会有ptrace反调试，然后获取输入
&lt;ul&gt;
&lt;li&gt;这里的输入从分析看应该是要解密后面说到的加密方法的&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;后面的坑就来了，如果顺着0x4008e1走，最后会打印出来&amp;quot;Congratulations? Key is XDCTF{Input}&amp;quot;，一看就不对&lt;/li&gt;
&lt;li&gt;继续看，发现有个函数在0x400787,最后也会打印出来一个flag，而且会吧上面的string的“？”换成“！”，所以这个函数才是真正会吐出flag的过程&lt;/li&gt;
&lt;li&gt;解体思路应该是修改执行流到这里，但是问题有三个：
&lt;ul&gt;
&lt;li&gt;逆向出加密算法&lt;/li&gt;
&lt;li&gt;给出能通过的输入&lt;/li&gt;
&lt;li&gt;在什么时刻强制从0x4008e1跳到0x400787&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;因为没搞定上面三个问题，所以没写出来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;最后说下里面加密会用到字符串&lt;/strong&gt;&lt;em&gt;ZzAwZF9DcjRrM3JfZzBfb24=&lt;/em&gt;，不过加密算法，我就真不想看了。&lt;/p&gt;
&lt;h3 id=&#34;misc-01&#34;&gt;Misc 01&lt;/h3&gt;
&lt;p&gt;这题后来给了tips，也就是org原图。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先用stegsolv打开zzzzzzyu.png，跳几个plane后可以看到顶部有个条，原图org.png是没的&lt;/li&gt;
&lt;li&gt;用stegsolve两张combine一下，然后sub后发现顶部会出现两像素宽的条状区，里面零星分布一些黑色像素点&lt;/li&gt;
&lt;li&gt;导出成bmp，去色成黑白&lt;/li&gt;
&lt;li&gt;用python 的PIL库把顶部两行的按照像素输出，白色是0,黑色是1,可以得到如下字符串：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;但是接下来用jpk处理的时候，4bit格式format，然后处理完实在找不到什么特征了。。作罢。。。（o&amp;laquo;(≧口≦)&amp;raquo;o&lt;/p&gt;
&lt;h2 id=&#34;0x3-解出来的&#34;&gt;0x3 解出来的&lt;/h2&gt;
&lt;p&gt;嘛，怎么着还是做出来一题的，至少不是鸭蛋，咩哈哈哈哈&amp;lt;(=￣_￣)σ…&amp;lt;( ＿ ＿)ノ｜&lt;/p&gt;
&lt;p&gt;给了一个数据文件，file一下识别不了格式，strings也没啥有用信息，bless看的时候发现开头几个字符是VIMG&amp;hellip;.fat12&amp;hellip;.VMWare Visual什么的，搜了下，唯独fat12有点信息，但是挂载的话还是会失败。&lt;/p&gt;
&lt;p&gt;换用binwalk，可以看到里面有很多东西，但是有两个zip文件，而且最后那个里面有flag.txt，于是把两个都dd出来
&lt;strong&gt;不过要说的是dd中间那个的时候，如何能精确的dd出来还是听麻烦的，试了好久，dd出来了一个没有多余附加尾部的zip，如果有更好的方法还希望有人留言说下哈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;dd出来后有flag的那个，姑且命名为flag.zip有密码，试着去掉密码位后一样不行，说明不是伪加密，再看没加密的那个，姑且命名为x.zip，发现两个都有个readme.txt&lt;/p&gt;
&lt;p&gt;用unzip -v查看了下两个的内容，结果两个readme.txt相同诶，于是想到明文破解，把x.zip里除readme.txt外的文件全部删掉，然后用pkcrack大法，大概用法是&lt;/p&gt;
&lt;p&gt;pkcrack -c &amp;ldquo;readme.txt&amp;rdquo; -p raedme.txt -C flag.zip -P x.zip -d ok.zip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-c是指出加密zip里readme.txt的文件结构，从顶层文件夹开始&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;flag.zip
	|---readme.txt
	|---flag.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里flag.zip文件结构如图&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-p是明文的readme.txt所在位置，防止麻烦都放一块，当前目录下&lt;/li&gt;
&lt;li&gt;-C是待破解加密包flag.zip&lt;/li&gt;
&lt;li&gt;-P是包含明文readme.txt的无密码zip包x.zip&lt;/li&gt;
&lt;li&gt;-d指明破解成功后的明文包输出为ok.zip&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后后开跑，大概10分钟搞定，得到无密码包，拿到flag&lt;/p&gt;
&lt;p&gt;如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/XDCTFWRITEUP/misc21.jpg&#34; alt=&#34;misc02.0&#34;&gt;
&lt;img src=&#34;https://blog.exiahan.com/images/XDCTFWRITEUP/misc22.jpg&#34; alt=&#34;misc02.1&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>