<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NSCTF2015 on ExiaHan&#39;s Blog</title>
    <link>https://blog.exiahan.com/tags/nsctf2015/</link>
    <description>Recent content in NSCTF2015 on ExiaHan&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 25 Sep 2015 20:56:06 +0800</lastBuildDate>
    
	<atom:link href="https://blog.exiahan.com/tags/nsctf2015/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NSCTF2015 WriteUp</title>
      <link>https://blog.exiahan.com/posts/nsctf2015_writeup/</link>
      <pubDate>Fri, 25 Sep 2015 20:56:06 +0800</pubDate>
      
      <guid>https://blog.exiahan.com/posts/nsctf2015_writeup/</guid>
      <description>&lt;p&gt;&lt;strong&gt;参加了NSCTF线上比赛，感觉自己水平还是有待提高啊，写一下做出来的题目的备忘&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;reverse&#34;&gt;Reverse&lt;/h2&gt;
&lt;h3 id=&#34;0x1-简单的逆向&#34;&gt;0x1 简单的逆向&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/74ec9621ac5f8573abc90b3fb9199e38/Reverse01.exe&#34;&gt;Reverse01&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行程序，出现CLI程序窗口，提示输入密码，随意输入，提示错误。&lt;/li&gt;
&lt;li&gt;使用PEID查看，发现加了ASPACK2.12的壳，使用od加载，看到有pushad操作，使用esp方法脱壳&lt;/li&gt;
&lt;li&gt;&lt;del&gt;不需要完整脱壳，在壳程序运行完，dump程序&lt;/del&gt;[此步不是必须，但是可以dump出来后查看源码]&lt;/li&gt;
&lt;li&gt;回到od，查找字符串，找到提示的那句**&amp;ldquo;please input ns-ctf password&amp;rdquo;**，跳转到引用文字，发现有strcmp比较，比较字符串固定，为**&amp;ldquo;nsF0cuS!x01&amp;rdquo;**&lt;/li&gt;
&lt;li&gt;输入上面的字符串**&amp;ldquo;nsF0cuS!x01&amp;rdquo;**&lt;/li&gt;
&lt;li&gt;单步跟踪，发现有个jle跳转，如果条件满足会跳过一个函数调用，直接printf出来一个有乱码的flag，推测可能之前还有处理&lt;/li&gt;
&lt;li&gt;修改jle跳转为改为**&amp;ldquo;jmp short Reverse0.00401150&amp;rdquo;**，即调用其本来会通过jle跳过的函数，如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/re11.jpg&#34; alt=&#34;reverse01.0&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;继续F9运行，程序吐出flag，如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/re12.jpg&#34; alt=&#34;reverse01.1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;0x2-较简单的逆向&#34;&gt;0x2 较简单的逆向&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/806b95d9497584c4a9d89118c8944424/Reverse02.exe&#34;&gt;Reverse02&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;本题和第一题类似，只不过改成了窗口程序&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行，发现窗口程序&lt;/li&gt;
&lt;li&gt;使用OD或者IDA打开&lt;/li&gt;
&lt;li&gt;尝试搜索&amp;quot;Flag&amp;rdquo;，发现有好几个匹配，记下，同时猜测可能和第一题一样有对flag处理&lt;/li&gt;
&lt;li&gt;查看导入表，发现是个dialogbox，查找调用，找到&lt;strong&gt;0x00401240&lt;/strong&gt;处的DialogBoxParamA调用，从其参数里找到对应回调处理函数入口为&lt;strong&gt;0x00401180&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;转到&lt;strong&gt;0x00401180&lt;/strong&gt;处，发现有个GetDlgItemTextA的调用，在其下有个&lt;strong&gt;call 0x00401070&lt;/strong&gt;，猜测会在其中处理Flag，修改程序执行流，让其可以执行，跟踪进入此函数，如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/re21.jpg&#34; alt=&#34;reverse02.0&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入0x00401070后，可以看到上面有个0x00401000的函数，可以看到内部有调用MessageBoxA显示Flag，同时在0x00401070内发现有此函数调用，修改执行流让其可以执行，跟踪进入0x00401000，在MessageBoxA调用前下断，看到真正的flag，如图：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/re22.jpg&#34; alt=&#34;reverse02.1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;0x3-逆向&#34;&gt;0x3 逆向&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/877afdad88a2340eaefe8c1a87bb391e/Revesre03.exe&#34;&gt;Reverse03&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;分析：使用python生成的程序，运行时在本地Temp文件夹里释放文件，通过CreateProcessA运行一个新进程来执行，没搞定。。。。。。。。囧。。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;misc&#34;&gt;MISC&lt;/h2&gt;
&lt;h3 id=&#34;0x1-twitter&#34;&gt;0x1 Twitter&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;这题，额。。。啧啧。。一个md5,100块钱，不过有人抖了答案出来&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;0x2-wireshark&#34;&gt;0x2 Wireshark&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/16d8a763795dd8cc3cf5f599fbb5e5af/sniffer.pcapng&#34;&gt;sniffer.pcapng&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从题目可以看出来是个抓包题，wireshark打开文件[也可以用Dshell，或者binwalk]&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/misc1.jpg&#34; alt=&#34;misc02&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;题目说是下载，猜测在http里，表达式过滤http&lt;/li&gt;
&lt;li&gt;看到有个key.rar，服务器为192.168.52.1&lt;/li&gt;
&lt;li&gt;dump出key.rar，解压，需要密码&lt;/li&gt;
&lt;li&gt;继续查找发现获取rar之前还有个从服务器获取的页面，dump内容保存成html文件，内容有提示密码为nsfocus+5个数字&lt;/li&gt;
&lt;li&gt;生成字典，爆破，解压密码为nsfocus56317,打开后获得flag&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;web&#34;&gt;WEB&lt;/h2&gt;
&lt;h3 id=&#34;0x1-be-careful&#34;&gt;0x1 Be Careful&lt;/h3&gt;
&lt;p&gt;使用chrome dev tools跟踪页面，发现有个301重定向，猜测可能有个默认的动态页面，尝试index.php，发现确实存在，使用wireshark抓包，看到flag在注释里。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/web1.jpg&#34; alt=&#34;web01&#34;&gt;&lt;/p&gt;
&lt;p&gt;###0x2 Decode&lt;/p&gt;
&lt;p&gt;题目里给了个php的函数，接受传入的字符串&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;function encode($str){
	$_o = strrev($str);
	for($_0=0;$_0&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;strlen&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;($&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_o&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;);$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_0&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;++){&lt;/span&gt;
		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_c &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;substr($_o,$_0,1);&lt;/span&gt;
		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;__ &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;ord($_c)+1;&lt;/span&gt;
		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_c &lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;chr($__);&lt;/span&gt;
		&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;$_.$_c;&lt;/span&gt;
	&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
	&lt;span style=&#34;color:#a6e22e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;str_rot13&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;strrev&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;base64_encode&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;($&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;_&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;)));&lt;/span&gt;
&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其作用如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;反转字符串&lt;/li&gt;
&lt;li&gt;每个字符对应值加1再转回字符串，即每个字符都变成其后一个字符&lt;/li&gt;
&lt;li&gt;得到的新字符串base64编码&lt;/li&gt;
&lt;li&gt;编码后再反转&lt;/li&gt;
&lt;li&gt;反转后rot13编码得到最终字符串，即题目的&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据上面的分析逆向一次即可得到flag&lt;/p&gt;
&lt;h2 id=&#34;crypto&#34;&gt;CRYPTO&lt;/h2&gt;
&lt;h3 id=&#34;0x1-神秘的字符串&#34;&gt;0x1 神秘的字符串&lt;/h3&gt;
&lt;p&gt;给了一串字符串（写在比赛结束后，已经看不到了。。），感觉像base64，解一下，发现有Salted_字样的玩意，应该是AES加密，到网上找了个网站解密了一下，结果解出来是flag{字符串}的形式，因为字符串不是NSCTF开头，感觉还有加密，在密码机器网上跑了一下，发现是凯撒移位加密，得到最终flag是NSCTF_Rot_Encryption&lt;/p&gt;
&lt;h3 id=&#34;0x2-神奇的图片&#34;&gt;0x2 神奇的图片&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/8041661a723dcc82a8a088163e2cd9ac/oddpic.jpg&#34;&gt;oddpic.jpg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;binwalk走一遍，里面有其他的jpeg，dd出来，得到flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/crypto2.jpg&#34; alt=&#34;crypt02&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;0x3-神秘的图片10086&#34;&gt;0x3 神秘的图片+10086&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;题目地址：&lt;/strong&gt;&lt;a href=&#34;http://www.nsctf.net/static/uploads/50cf3d7ee75c2bbb7a91808dc811aa24/newnewnew.jpg&#34;&gt;newnewnew.jpg&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;binwalk走一下没结果，用stegsolv分析下，在blue plane 0通道看到一个颜色反转的二维码，保存出来，用ps等工具反转下颜色，手机扫描，得到flag&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://blog.exiahan.com/images/NSCTF2015WriteUp/crypto3.jpg&#34; alt=&#34;crypt03&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update:附上官方博客资料，里面有WriteUp，&lt;a href=&#34;http://blog.nsfocus.net/nsctf-network-attack-defence-game-download/&#34;&gt;绿盟博客&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>